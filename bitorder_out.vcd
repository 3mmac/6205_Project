$date
	Wed Dec 14 09:48:40 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module bitorder_out_tb $end
$var wire 1 ! axiov_out $end
$var wire 2 " axiod_out [1:0] $end
$var reg 8 # axiid [7:0] $end
$var reg 1 $ axiiv $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$scope module uut $end
$var wire 8 ' axiid [7:0] $end
$var wire 1 $ axiiv $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var reg 2 ( axiod [1:0] $end
$var reg 1 ! axiov $end
$var reg 2 ) counter_in [1:0] $end
$var reg 1 * downtime $end
$var reg 1 + flipping $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x+
x*
bx )
bx (
bx '
0&
0%
x$
bx #
bx "
x!
$end
#10000
1%
#20000
0%
#30000
0+
1*
1%
1&
#40000
0%
#50000
b11 "
b11 (
1!
b1 )
0*
1+
1%
1$
b11110011 #
b11110011 '
0&
#60000
0%
#70000
b0 "
b0 (
b10 )
1%
#80000
0%
#90000
b11 "
b11 (
b11 )
1%
#100000
0%
#110000
b0 )
1%
#120000
0%
#130000
b10 "
b10 (
b1 )
1%
b100110 #
b100110 '
#140000
0%
#150000
b1 "
b1 (
b10 )
1%
#160000
0%
#170000
b10 "
b10 (
b11 )
1%
#180000
0%
#190000
b0 "
b0 (
b0 )
1%
#200000
0%
#210000
b10 "
b10 (
b1 )
1%
